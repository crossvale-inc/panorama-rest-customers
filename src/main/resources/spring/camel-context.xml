<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
	<!-- MQ Components -->
	<bean class="org.apache.activemq.ActiveMQConnectionFactory"
		id="jmsConnectionFactory">
		<property name="brokerURL" value="${activemq.broker.url}" />
		<property name="userName"
			value="${activemq.broker.username:#null}" />
		<property name="password"
			value="${activemq.broker.password:#null}" />
	</bean>
	<bean class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop" id="pooledConnectionFactory" init-method="start"
		primary="true">
		<property name="maxConnections"
			value="${activemq.pool.max.connections}" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>
	<bean
		class="org.apache.activemq.camel.component.ActiveMQConfiguration"
		id="jmsConfig">
		<property name="connectionFactory"
			ref="pooledConnectionFactory" />
		<property name="concurrentConsumers"
			value="${activemq.concurrent.consumers}" />
	</bean>
	<bean
		class="org.apache.activemq.camel.component.ActiveMQComponent" id="amq">
		<property name="configuration" ref="jmsConfig" />
	</bean>
	<!-- MQ Components -->
	<!-- Custom Processors -->
	<bean
		class="com.crossvale.fiscamel.service.processor.CustomerProcessor"
		id="customerProcessor" />
	<bean
		class="com.crossvale.fiscamel.service.controller.CustomerController"
		id="customerController" />
	<bean
		class="com.crossvale.fiscamel.service.controller.AccountController"
		id="accountController" />
	<bean class="com.crossvale.fiscamel.service.model.CustomerModel"
		id="customerModel" />
	<bean class="com.crossvale.fiscamel.service.model.AccountModel"
		id="accountModel" />
		
	<bean
		class="com.crossvale.fiscamel.service.controller.ResponseController"
		id="responseController" />
	<bean
		class="com.crossvale.fiscamel.service.processor.ResponseProcessor"
		id="responseProcessor" />
	<!-- Custom Processors -->
	
	<camelContext id="camelContext"
		xmlns="http://camel.apache.org/schema/spring">
		<restConfiguration bindingMode="json"
			component="servlet" contextPath="/rest/*" host="localhost">
			<dataFormatProperty key="json.in.disableFeatures"
				value="FAIL_ON_UNKNOWN_PROPERTIES,ADJUST_DATES_TO_CONTEXT_TIME_ZONE" />
			<!-- <dataFormatProperty key="json.in.enableFeatures" value="FAIL_ON_NUMBERS_FOR_ENUMS,USE_BIG_DECIMAL_FOR_FLOATS"/> -->
		</restConfiguration>
		<rest consumes="application/json" id="_customers_get"
			produces="application/json">
			<get bindingMode="json" id="customers_get"
				outType="com.crossvale.fiscamel.service.datatypes.CustomerBase[]"
				uri="/customers">
				<description>Retrieve all customers</description>
				<to id="customers_get_to"
					uri="bean:customerController?method=getAllCustomers" />
			</get>
			<get bindingMode="json" enableCORS="true"
				id="_customerNumber_get"
				outType="com.crossvale.fiscamel.service.datatypes.Customer"
				uri="customer/{customerNumber}">
				<param dataType="string" name="customerNumber" type="path" />
				<toD id="customers_get_to"
					uri="bean:customerController?method=getCustomerByNumber(${header.customerNumber})" />
			</get>
			<get bindingMode="json" enableCORS="true" id="_search_get"
				outType="com.crossvale.fiscamel.service.datatypes.CustomerBase[]"
				uri="/search/{name}">
				<param dataType="string" name="name" type="path" />
				<toD id="customers_get_to"
					uri="bean:customerController?method=searchCustomerByName(${header.name})" />
			</get>
		</rest>
		<rest consumes="application/json" id="_customers_post"
			produces="text/plain">
			<post bindingMode="json" id="customers_post">
				<to id="customers_post_to" uri="direct:processCustomer" />
			</post>
		</rest>
		<rest consumes="application/json" id="_customers_put"
			produces="text/plain">
			<put bindingMode="json" id="customers_put">
				<to id="customers_put_to" uri="direct:processCustomer" />
			</put>
		</rest>
		<route id="processCustomer">
			<from id="_directToCustomer" uri="direct:processCustomer" />
			<log id="_logProcessCustomerRequest" message="Request: ${body}" />
			<process id="_processCustomer" ref="customerProcessor" />
			<to id="_processCustomerSendEvent" uri="direct:sendEvent" />
		</route>
		<route id="sendEvent">
			<from id="_receiveSendEvent" uri="direct:sendEvent" />
			<log id="_logSendEventRequest" message="Request: ${body}" />
			<process id="_processResponse" ref="responseProcessor" />
			<to id="_sendEventDetails"
				uri="bean:responseController?method=sendEventDetails" />
		</route>
		<!-- MQ Routes -->
		<!-- Routes for interaction with MQ Backbone -->
		<route id="_rteToBackend">
			<from id="_fromChannel" uri="direct:submitToQueueForProcessing" />
			<log id="_logRouteToBackendRequest" message="Request: ${body}" />
			<to id="_toBackEnd" uri="activemq:queue:in" />
		</route>
		<route id="_rteFromBackend">
			<from id="_fromBackEnd" uri="activemq:queue:out" />
			<log id="_logRouteFromBackendResponse"
				message="Response: ${body}" />
			<to id="_to3" uri="direct:responseFromQueueForChannel" />
		</route>		
		<!-- Routes for interaction with MQ Backbone -->
		<!-- MQ Routes -->
	</camelContext>	
</beans>
